{"ast":null,"code":"import _regeneratorRuntime from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/src/App.js\";\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nvar API_KEY = \"10e43d3bf2f757a47fb74b83e31d4bf2\"; //http://api.openweathermap.org/data/2.5/weather?q=cairo,egypt&appid=e36ed364400282e43250b6c4c0274d44\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: '',\n      city: '',\n      country: '',\n      humidity: '',\n      description: '',\n      erorr: ''\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 5:\n                api = _context.sent;\n                _context.next = 8;\n                return api.json();\n\n              case 8:\n                data = _context.sent;\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: data.main.temp.ceil() - 273,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    erorr: ''\n                  });\n                } else {\n                  _this.setState({\n                    temperature: '',\n                    city: '',\n                    country: '',\n                    humidity: '',\n                    description: '',\n                    erorr: 'Please enter Data'\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.erorr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/media/user/5A10329F101F30D8/Reactjs rev/Reactjs Applications/weather/src/App.js"],"names":["React","Component","Form","Weather","API_KEY","App","state","temperature","city","country","humidity","description","erorr","getWeather","e","preventDefault","target","elements","value","fetch","api","json","data","setState","main","temp","ceil","name","sys","weather"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAO;AACLC,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,OAAO,EAAE,EAHJ;AAILC,MAAAA,QAAQ,EAAE,EAJL;AAKLC,MAAAA,WAAW,EAAE,EALR;AAMLC,MAAAA,KAAK,EAAE;AANF,K;;UAUPC,U;;;;;+BAAa,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACC,cAAF;AAEMP,gBAAAA,IAHK,GAGEM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAHzB;AAILT,gBAAAA,OAJK,GAIKK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAJ/B;AAAA;AAAA,uBAKMC,KAAK,4DAAqDX,IAArD,cAA6DC,OAA7D,oBAA8EL,OAA9E,EALX;;AAAA;AAKLgB,gBAAAA,GALK;AAAA;AAAA,uBAMQA,GAAG,CAACC,IAAJ,EANR;;AAAA;AAMLC,gBAAAA,IANK;;AAQX,oBAAGd,IAAI,IAAIC,OAAX,EAAoB;AAClB,wBAAKc,QAAL,CAAc;AACZhB,oBAAAA,WAAW,EAAIe,IAAI,CAACE,IAAL,CAAUC,IAAV,CAAeC,IAAf,EAAD,GAA0B,GAD5B;AAEZlB,oBAAAA,IAAI,EAAEc,IAAI,CAACK,IAFC;AAGZlB,oBAAAA,OAAO,EAAEa,IAAI,CAACM,GAAL,CAASnB,OAHN;AAIZC,oBAAAA,QAAQ,EAAEY,IAAI,CAACE,IAAL,CAAUd,QAJR;AAKZC,oBAAAA,WAAW,EAAEW,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBlB,WALjB;AAMZC,oBAAAA,KAAK,EAAE;AANK,mBAAd;AAQD,iBATD,MASO;AACL,wBAAKW,QAAL,CAAc;AACZhB,oBAAAA,WAAW,EAAE,EADD;AAEZC,oBAAAA,IAAI,EAAE,EAFM;AAGZC,oBAAAA,OAAO,EAAE,EAHG;AAIZC,oBAAAA,QAAQ,EAAE,EAJE;AAKZC,oBAAAA,WAAW,EAAE,EALD;AAMZC,oBAAAA,KAAK,EAAE;AANK,mBAAd;AAQD;;AA1BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BA8BJ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAG,KAAKP,KAAL,CAAWC,WAD3B;AAEE,QAAA,IAAI,EAAG,KAAKD,KAAL,CAAWE,IAFpB;AAGE,QAAA,OAAO,EAAG,KAAKF,KAAL,CAAWG,OAHvB;AAIE,QAAA,QAAQ,EAAG,KAAKH,KAAL,CAAWI,QAJxB;AAKE,QAAA,WAAW,EAAG,KAAKJ,KAAL,CAAWK,WAL3B;AAME,QAAA,KAAK,EAAG,KAAKL,KAAL,CAAWM,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAeD;;;;EA1DeX,S;;AA6DlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\nconst API_KEY = \"10e43d3bf2f757a47fb74b83e31d4bf2\";\n\n//http://api.openweathermap.org/data/2.5/weather?q=cairo,egypt&appid=e36ed364400282e43250b6c4c0274d44\n\nclass App extends Component {\n\n  state= {\n    temperature: '',\n    city: '',\n    country: '',\n    humidity: '',\n    description: '',\n    erorr: ''\n  }\n\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api= await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`)\n    const data = await api.json();\n\n    if(city && country) {\n      this.setState({\n        temperature: ((data.main.temp.ceil()) - 273),\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        erorr: ''\n      })\n    } else {\n      this.setState({\n        temperature: '',\n        city: '',\n        country: '',\n        humidity: '',\n        description: '',\n        erorr: 'Please enter Data'\n      }) \n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-container\">\n          <Form getWeather={this.getWeather}/>\n          <Weather \n            temperature= {this.state.temperature}\n            city= {this.state.city}\n            country= {this.state.country}\n            humidity= {this.state.humidity}\n            description= {this.state.description}\n            error= {this.state.erorr}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}